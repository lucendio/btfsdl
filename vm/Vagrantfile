############################################################
#### Version: 0.0.1
#### Author: dev@lucendio.com
#### Type: btfs downloader
#### Provider: virtualbox
#### Provisioning: shell script
############################################################

# -*- mode: ruby -*-
# vi: set ft=ruby :

VAGRANTFILE_API_VERSION = "2"
VAGRANT_PROJECT_ID = "lio-vm-btfsdl-01"
DOMAINNAME = "lio-vm-btfsdl-01.local"
ENV_PROVISION = "./provision.sh"
INSTALL_PATH = "/usr/local/btfsdl"
USERNAME = "vagrant"

if(ENV['VAGRANT_ENV_VARS'])
    ENV_VARS = ENV['VAGRANT_ENV_VARS'].split(' ')
else
    ENV_VARS = []
end


Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|


    config.vm.box = "ubuntu/trusty64"           # --> will be downloaded from vagrantcloud
                                                # --> TODO: choose your own vagrant base box
                                                # e.g.: ubuntu/xenial64 ubuntu/trusty64 bento/ubuntu-16.04
    config.vm.box_check_update = true           # --> default: true
    config.vm.communicator = "ssh"              # --> default: "ssh"

    config.vm.hostname = VAGRANT_PROJECT_ID
    config.vm.network "private_network", ip: "10.0.4.20"
    config.vm.post_up_message = "Welcome to the btfs bulk downloader vm!"

    # NOTE: source - http://docs.vagrantup.com/v2/vagrantfile/ssh_settings.html
    config.ssh.username = "vagrant"
    #config.ssh.password = "vagrant"
    config.ssh.forward_agent = false
    config.ssh.insert_key = false               # --> true: disables key auth with vagrants own insecure key

    # provider configs
    config.vm.provider "virtualbox" do |v|
        v.gui = false
        v.name = VAGRANT_PROJECT_ID
        v.memory = 1024
        v.cpus = 1
    end

    config.vm.synced_folder ".", "/vagrant", disabled: true
    config.vm.synced_folder "./../conf", INSTALL_PATH + "/conf", owner: USERNAME, group: USERNAME, mount_options: ["ro"]
    config.vm.synced_folder "./../share", INSTALL_PATH + "/share", owner: USERNAME, group: USERNAME, mount_options: ["rw"]
    config.vm.synced_folder "./../lib", INSTALL_PATH + "/lib", owner: USERNAME, group: USERNAME, mount_options: ["ro", "exec"]

    config.vm.provision "shell" do |s|
        s.privileged = true
        s.path = ENV_PROVISION
        s.args = [ INSTALL_PATH, USERNAME ].concat( ENV_VARS )
    end


end
